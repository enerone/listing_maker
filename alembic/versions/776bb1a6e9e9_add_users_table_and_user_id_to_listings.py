"""Add users table and user_id to listings

Revision ID: 776bb1a6e9e9
Revises: 
Create Date: 2025-07-22 12:05:33.844587

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '776bb1a6e9e9'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    
    # Crear tabla de usuarios primero
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('username', sa.String(length=100), nullable=False),
    sa.Column('hashed_password', sa.String(length=255), nullable=False),
    sa.Column('full_name', sa.String(length=255), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('is_admin', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('last_login', sa.DateTime(timezone=True), nullable=True),
    sa.Column('preferences', sa.Text(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_index(op.f('ix_users_id'), 'users', ['id'], unique=False)
    op.create_index(op.f('ix_users_username'), 'users', ['username'], unique=True)
    
    # Crear usuario por defecto para listings existentes
    from sqlalchemy.sql import table, column
    from sqlalchemy import String, Integer, Boolean
    
    # Crear un usuario por defecto
    users_table = table('users',
        column('id', Integer),
        column('email', String),
        column('username', String),
        column('hashed_password', String),
        column('full_name', String),
        column('is_active', Boolean),
        column('is_admin', Boolean)
    )
    
    # Insertar usuario por defecto (admin/admin con hash)
    default_password_hash = '$2b$12$EixZaYVK1fsbw1ZfbX3OXePaWxn96p36WQoeG6Lruj3vjPGga31lW'  # "secret"
    op.execute(
        users_table.insert().values(
            email='admin@localhost',
            username='admin',
            hashed_password=default_password_hash,
            full_name='Administrator',
            is_active=True,
            is_admin=True
        )
    )
    
    # Agregar columna user_id como nullable primero
    op.add_column('listings', sa.Column('user_id', sa.Integer(), nullable=True))
    
    # Actualizar todos los listings existentes para que tengan user_id = 1 (admin)
    op.execute("UPDATE listings SET user_id = 1 WHERE user_id IS NULL")
    
    # Ahora hacer la columna NOT NULL
    op.alter_column('listings', 'user_id', nullable=False)
    
    # Agregar Ã­ndice y foreign key
    op.create_index(op.f('ix_listings_user_id'), 'listings', ['user_id'], unique=False)
    op.create_foreign_key(None, 'listings', 'users', ['user_id'], ['id'])
    
    # Cambiar tipo de columna image_ai_prompts
    op.alter_column('listings', 'image_ai_prompts',
               existing_type=sa.TEXT(),
               type_=sa.JSON(),
               existing_nullable=True)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'listings', type_='foreignkey')
    op.drop_index(op.f('ix_listings_user_id'), table_name='listings')
    op.alter_column('listings', 'image_ai_prompts',
               existing_type=sa.JSON(),
               type_=sa.TEXT(),
               existing_nullable=True)
    op.drop_column('listings', 'user_id')
    op.drop_index(op.f('ix_users_username'), table_name='users')
    op.drop_index(op.f('ix_users_id'), table_name='users')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_table('users')
    # ### end Alembic commands ###
